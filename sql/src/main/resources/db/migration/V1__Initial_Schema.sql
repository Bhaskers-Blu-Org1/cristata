-- V1 - Initial SQL DB Schema


CREATE TABLE DEVICE (
	DEVICE_ID	INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY
                        	(START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647
					NO CYCLE CACHE 20 NO ORDER),
	NAME		VARCHAR(101) NOT NULL
)
ORGANIZE BY ROW DATA CAPTURE NONE;

ALTER TABLE DEVICE ADD CONSTRAINT DEVICE_PK PRIMARY KEY (DEVICE_ID);
ALTER TABLE DEVICE ADD CONSTRAINT DEVICE_UK UNIQUE (NAME);

CREATE TABLE TIME_SERIES (
 	DEVICE_ID  		INTEGER NOT NULL,
	OBSERVED_TIMESTAMP	TIMESTAMP NOT NULL WITH DEFAULT, --Defaults to CURRENT TIMESTAMP
	ADDED_TIMESTAMP		TIMESTAMP NOT NULL WITH DEFAULT, --Defaults to CURRENT TIMESTAMP
	VALUE			DOUBLE NOT NULL
)
ORGANIZE BY ROW DATA CAPTURE NONE;

ALTER TABLE TIME_SERIES ADD CONSTRAINT TS_PK PRIMARY KEY (DEVICE_ID, OBSERVED_TIMESTAMP);
ALTER TABLE TIME_SERIES ADD CONSTRAINT DEVICE_FK FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID) ON DELETE CASCADE;

CREATE OR REPLACE PROCEDURE GET_DEVICES()
LANGUAGE SQL
DYNAMIC RESULT SETS 1
BEGIN
	DECLARE cur CURSOR WITH RETURN TO CALLER FOR
		SELECT DEVICE.NAME, DEVICE.DEVICE_ID FROM DEVICE; 
	OPEN cur;
END;


CREATE OR REPLACE PROCEDURE GET_TS(IN i_device VARCHAR(101), 
					IN i_from TIMESTAMP, IN i_to TIMESTAMP)
LANGUAGE SQL
DYNAMIC RESULT SETS 1
BEGIN
	DECLARE cur CURSOR WITH RETURN TO CALLER FOR
		SELECT DEVICE.NAME, TIME_SERIES.OBSERVED_TIMESTAMP, TIME_SERIES.VALUE 
			FROM DEVICE, TIME_SERIES 
			WHERE DEVICE.NAME = i_device  
			AND TIME_SERIES.OBSERVED_TIMESTAMP > i_from
			AND TIME_SERIES.OBSERVED_TIMESTAMP < i_to 
			AND TIME_SERIES.DEVICE_ID = DEVICE.DEVICE_ID;
	OPEN cur;
END;


CREATE or REPLACE PROCEDURE ADD_TS(
                IN i_device VARCHAR(101), IN i_observed TIMESTAMP, IN i_value DOUBLE)
LANGUAGE SQL
BEGIN
	DECLARE v_device_id INTEGER;
	--Handle (and ignore) constraint violations
	DECLARE v_duplicate INTEGER DEFAULT 0;
	DECLARE c_duplicate CONDITION FOR SQLSTATE '23505';
	DECLARE CONTINUE HANDLER FOR c_duplicate
		SET v_duplicate = 1;

	--Performing a select in the unlikely event of device not seen previously
	SELECT DEVICE_ID INTO v_device_id FROM DEVICE WHERE NAME = i_device;

	IF v_device_id IS NULL THEN
		INSERT INTO DEVICE (NAME) VALUES (i_device);
		SELECT DEVICE_ID INTO v_device_id FROM DEVICE WHERE NAME = i_device;
	END IF;

	--Allow constraint violation to fire - and ignore duplicate
	INSERT INTO TIME_SERIES (DEVICE_ID, OBSERVED_TIMESTAMP, VALUE)
		VALUES (v_device_id, i_observed, i_value);

	IF v_duplicate != 1 THEN
		COMMIT;
	END IF;
END;


